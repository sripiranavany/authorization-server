server:
  port: 9000

spring:
  application:
    name: customer-care-authorization-server

  datasource:
    url: jdbc:h2:mem:authdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password

  h2:
    console:
      enabled: true
      path: /h2-console

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: false

  security:
    oauth2:
      authorization-server:
        jwt:
          key-value: secret
        client:
          api-client:
            client-id: api-client
            client-secret: "{bcrypt}$2a$10$example"
            authorization-grant-types:
              - client_credentials
              - refresh_token
            scopes:
              - read
              - write
              - admin
          web-client:
            client-id: web-client
            client-secret: "{bcrypt}$2a$10$example"
            authorization-grant-types:
              - authorization_code
              - refresh_token
            redirect-uris:
              - http://localhost:3000/callback
              - http://localhost:8080/login/oauth2/code/custom
            scopes:
              - openid
              - profile
              - email
              - read
              - write
          mobile-client:
            client-id: mobile-client
            client-secret: "{bcrypt}$2a$10$example"
            authorization-grant-types:
              - password
              - refresh_token
            scopes:
              - read
              - write
              - openid
              - profile

logging:
  config: classpath:log4j2.xml
  level:
    root: INFO
    com.sripiranavan.authorization_server: DEBUG
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
    org.springframework.web: INFO
    org.springframework.boot: WARN
    org.hibernate: WARN
  # Disable Spring Boot's default logging in favor of Log4j2
  pattern:
    console: ""
  file:
    name: ""

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# OAuth2 Token Configuration
oauth2:
  token:
    # Authorization code expiration time (in minutes)
    auth-code-expiration-minutes: 1
    
    # Access token expiration time (in minutes)
    access-token-expiration-minutes: 30
    
    # Refresh token expiration time (in days)
    refresh-token-expiration-days: 7
    
    # Client-specific token settings
    clients:
      web-client:
        access-token-expiration-minutes: 5
        refresh-token-expiration-days: 1
      api-client:
        access-token-expiration-minutes: 60
        refresh-token-expiration-days: 1
      mobile-client:
        access-token-expiration-minutes: 15
        refresh-token-expiration-days: 1

  server:
    # The issuer URL for the OAuth2 authorization server
    issuer-url: http://localhost:9000
    
    # Web client redirect URIs
    web-client-redirect-uris:
      - http://localhost:3000/callback
      - http://localhost:8080/login/oauth2/code/custom
      - http://localhost:3000/auth/callback
    
    # Mobile client redirect URIs  
    mobile-client-redirect-uris:
      - http://localhost:3001/callback
      - myapp://callback
